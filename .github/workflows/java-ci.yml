# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
jobs:
  build:
    name: Maven Package / Dependency Check / Sonar Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache NVD OWASP
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository/org/owasp/dependency-check-data
          key: ${{ runner.os }}-nvd-owasp
          restore-keys: ${{ runner.os }}-nvd-owasp

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -DnvdApiKey=${{ secrets.NVD_API_KEY }} -B package dependency-check:aggregate org.sonarsource.scanner.maven:sonar-maven-plugin:sonar --file pom.xml

      - name: Upload Dependency Check Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: target/dependency-check-report.html

      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        with:
          report_paths: "**/target/surefire-reports/*.xml"
          fail_if_no_tests: false
          check_name: Surefire Test Report
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate JaCoCo Badge - Commons
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: commons/target/site/jacoco/jacoco.csv
          coverage-badge-filename: commons-coverage-jacoco.svg
          branches-badge-filename: commons-branches-jacoco.svg
          workflow-summary-heading: Module Commons - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Commons Rest
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: commons-rest/target/site/jacoco/jacoco.csv
          coverage-badge-filename: commons-rest-coverage-jacoco.svg
          branches-badge-filename: commons-rest-branches-jacoco.svg
          workflow-summary-heading: Module Commons Rest - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Commons Scraper
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: commons-scraper/target/site/jacoco/jacoco.csv
          coverage-badge-filename: commons-scraper-coverage-jacoco.svg
          branches-badge-filename: commons-scraper-branches-jacoco.svg
          workflow-summary-heading: Module Commons Scraper - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Commons Messaging
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: commons-messaging/target/site/jacoco/jacoco.csv
          coverage-badge-filename: commons-messaging-coverage-jacoco.svg
          branches-badge-filename: commons-messaging-branches-jacoco.svg
          workflow-summary-heading: Module Commons Messaging - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Commons GRPC
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: commons-grpc/target/site/jacoco/jacoco.csv
          coverage-badge-filename: commons-grpc-coverage-jacoco.svg
          branches-badge-filename: commons-grpc-branches-jacoco.svg
          workflow-summary-heading: Module Commons GRPC - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Jetimob Scraper
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: jetimob-scraper/target/site/jacoco/jacoco.csv
          coverage-badge-filename: jetimob-scraper-coverage-jacoco.svg
          branches-badge-filename: jetimob-scraper-branches-jacoco.svg
          workflow-summary-heading: Module Jetimob Scraper - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - Data
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: data/target/site/jacoco/jacoco.csv
          coverage-badge-filename: data-coverage-jacoco.svg
          branches-badge-filename: data-branches-jacoco.svg
          workflow-summary-heading: Module Data - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - API
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: api/target/site/jacoco/jacoco.csv
          coverage-badge-filename: api-coverage-jacoco.svg
          branches-badge-filename: api-branches-jacoco.svg
          workflow-summary-heading: Module API - JaCoCo Test Coverage Summary

      - name: JoCoco Badge Commit
        if: github.event_name != 'pull_request'
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Thiago Gomes Borba'
            git config --global user.email 'thiago.borba@users.noreply.github.com'
            git add -A
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push
          fi

  dockerBuild:
    name: Docker Build And Push
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Package with Maven
        run: mvn -B package -DskipTests --file pom.xml

      - name: Build Docker Image Jetimob-Scraper
        run: docker build . --file Dockerfile-jetimob-scraper --tag aquinate/house-seeker-jetimob-scraper:latest

      - name: Build Docker Image Data
        run: docker build . --file Dockerfile-data --tag aquinate/house-seeker-data:latest

      - name: Build Docker Image API
        run: docker build . --file Dockerfile-api --tag aquinate/house-seeker-api:latest

      - name: Log into docker.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: docker.io
          username: aquinate
          password: ${{ secrets.DOCKER_HUB_PSW }}

      - name: Push Docker Image Jetimob-Scraper
        run: docker push aquinate/house-seeker-jetimob-scraper:latest

      - name: Push Docker Image Data
        run: docker push aquinate/house-seeker-data:latest

      - name: Push Docker Image API
        run: docker push aquinate/house-seeker-api:latest

  containerScanner:
    name: Trivy Container Scanner
    runs-on: ubuntu-latest
    needs: dockerBuild
    if: github.event_name != 'pull_request'
    steps:
      - name: Log into docker.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: docker.io
          username: aquinate
          password: ${{ secrets.DOCKER_HUB_PSW }}

      - name: Scanning Image Jetimob-Scrapper
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aquinate/house-seeker-jetimob-scraper:latest'
          format: 'sarif'
          output: 'trivy-scan-report-jetimob-scraper.sarif'
          ignore-unfixed: true

      - name: Scanning Image Data
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aquinate/house-seeker-data:latest'
          format: 'sarif'
          output: 'trivy-scan-report-data.sarif'
          ignore-unfixed: true

      - name: Scanning Image API
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aquinate/house-seeker-api:latest'
          format: 'sarif'
          output: 'trivy-scan-report-api.sarif'
          ignore-unfixed: true

      - name: Upload Report Artifact Jetimob-Scrapper
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report-jetimob-scraper.sarif
          path: trivy-scan-report-jetimob-scraper.sarif

      - name: Publish Report Jetimob-Scrapper
        uses: github/codeql-action/upload-sarif@v2
        with:
          category: trivy-scan-jetimob-scrapper
          sarif_file: 'trivy-scan-report-jetimob-scraper.sarif'

      - name: Upload Report Data
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report-data.sarif
          path: trivy-scan-report-data.sarif

      - name: Publish Report Data
        uses: github/codeql-action/upload-sarif@v2
        with:
          category: trivy-scan-data
          sarif_file: 'trivy-scan-report-data.sarif'

      - name: Upload Report API
        uses: actions/upload-artifact@v4
        with:
          name: trivy-scan-report-api.sarif
          path: trivy-scan-report-api.sarif

      - name: Publish Report API
        uses: github/codeql-action/upload-sarif@v2
        with:
          category: trivy-scan-api
          sarif_file: 'trivy-scan-report-api.sarif'

  integrationTests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -DskipTests -B package --file pom.xml

      - name: Downloading Jacoco agent
        run: wget -O jacocoagent.zip https://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.8.12/jacoco-0.8.12.zip

      - name: Unzip Jacoco agent
        run: |
          unzip jacocoagent.zip -d data/target/jacocoagent;
          unzip jacocoagent.zip -d api/target/jacocoagent;

      - name: Checkout current branch on QA repo
        uses: actions/checkout@v4
        id: priority-checkout
        with:
          repository: thiagogb/house-seeker-services-qa
          ref: ${{ env.BRANCH_NAME }}
          token: ${{ secrets.PAT }}
          path: qa
          continue-on-error: true

      - name: Fallback checkout main branch on QA repo
        if: steps.priority-checkout.outcome == 'failure'
        uses: actions/checkout@v4
        with:
          repository: thiagogb/house-seeker-services-qa
          ref: main
          path: qa
          token: ${{ secrets.PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: qa/package-lock.json

      - name: Run PostgreSQL container
        run: |
          docker run -d \
          --name house-seeker-test-db \
          -e POSTGRES_USER=house-seeker \
          -e POSTGRES_PASSWORD=house-seeker \
          -e POSTGRES_DB=house-seeker \
          -e TZ=GMT-3 \
          -e PGTZ=GMT-3 \
          -p 5432:5432 \
          --network host \
          postgres:16.1-alpine

      - name: Waiting PostgreSQL container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-test-db`"=="healthy" ]; do
            printf '.';
            sleep 1;
          done;

      - name: Run RabbitMQ container
        run: |
          docker run -d \
          --name house-seeker-messaging-test \
          -e RABBITMQ_DEFAULT_PASS=house-seeker \
          -e RABBITMQ_DEFAULT_USER=house-seeker \
          -p 5672:5672 \
          --network host \
          rabbitmq:3.13.0-alpine

      - name: Waiting RabbitMQ container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-messaging-test`"=="healthy" ]; do
            printf '.';
            sleep 1;
          done;

      - name: Starting Data Application
        working-directory: data/target
        run: |
          nohup java \
          -javaagent:jacocoagent/lib/jacocoagent.jar=append=false \
          -jar \
          -Dspring.flyway.locations=classpath:db/migration/schema,classpath:db/migration/test \
          data-0.0.1-SNAPSHOT.jar > output.log 2>&1 &
          echo $! > save_pid.txt

      - name: Waiting Data Application to Respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8082/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Starting API Application
        working-directory: api/target
        run: |
          nohup java \
          -javaagent:jacocoagent/lib/jacocoagent.jar=append=false \
          -jar \
          api-0.0.1-SNAPSHOT.jar > output.log 2>&1 &
          echo $! > save_pid.txt

      - name: Waiting API Application to Respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Install NPM dependencies
        working-directory: qa
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: qa
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: qa
        run: API_URL=http://localhost:8080 CI=true npx playwright test

      - name: Killing Data Application
        working-directory: data/target
        run: |
          kill -INT `cat save_pid.txt`
          sleep 3

      - name: Killing API Application
        working-directory: api/target
        run: |
          kill -INT `cat save_pid.txt`
          sleep 3

      - name: Converting Jacoco Data Report
        working-directory: data/target
        if: github.event_name != 'pull_request'
        run: |
          find classes -type f -name "QDsl*.class" -delete
          find classes -type d -wholename "**/proto" -exec rm -r {} +
          java -jar jacocoagent/lib/jacococli.jar report jacoco.exec --csv qa-coverage.csv --sourcefiles ../src/main/java --classfiles classes

      - name: Converting Jacoco API Report
        working-directory: api/target
        if: github.event_name != 'pull_request'
        run: |
          find classes -type d -wholename "**/proto" -exec rm -r {} +
          java -jar jacocoagent/lib/jacococli.jar report jacoco.exec --csv qa-coverage.csv --sourcefiles ../src/main/java --classfiles classes

      - name: Generate JaCoCo Badge - Data
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: data/target/qa-coverage.csv
          coverage-badge-filename: qa-data-coverage-jacoco.svg
          branches-badge-filename: qa-data-branches-jacoco.svg
          workflow-summary-heading: QA Data - JaCoCo Test Coverage Summary

      - name: Generate JaCoCo Badge - API
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: api/target/qa-coverage.csv
          coverage-badge-filename: qa-api-coverage-jacoco.svg
          branches-badge-filename: qa-api-branches-jacoco.svg
          workflow-summary-heading: QA API - JaCoCo Test Coverage Summary

      - name: JoCoco Badge Commit
        if: github.event_name != 'pull_request'
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Thiago Gomes Borba'
            git config --global user.email 'thiago.borba@users.noreply.github.com'
            git add -A
            git commit -m "Autogenerated JaCoCo qa coverage badge"
            git push
          fi

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: qa/playwright-report/
