name: Integration tests
on:
  workflow_run:
    workflows: [ "Java unit tests" ]
    branches: [ "*" ]
    types:
      - completed
jobs:
  job:
    name: Maven dependency check
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Restoring modules targets
        uses: actions/cache/restore@v4
        with:
          path: maven-target.zip
          key: maven-target

      - name: Unzip module targets
        run: unzip -o maven-target.zip

      - name: Download and extract jacoco agent
        run: |
          wget -O jacocoagent.zip https://search.maven.org/remotecontent?filepath=org/jacoco/jacoco/0.8.12/jacoco-0.8.12.zip
          unzip jacocoagent.zip -d data/target/jacocoagent
          unzip jacocoagent.zip -d api/target/jacocoagent

      - name: Checkout branch with same name on QA repository
        uses: actions/checkout@v4
        id: priority-checkout
        continue-on-error: true
        with:
          repository: thiagogb/house-seeker-services-qa
          ref: ${{ env.BRANCH_NAME }}
          token: ${{ secrets.PAT }}
          path: qa

      - name: Fallback checkout main branch on QA repository
        if: steps.priority-checkout.outcome == 'failure'
        uses: actions/checkout@v4
        with:
          repository: thiagogb/house-seeker-services-qa
          ref: main
          path: qa
          token: ${{ secrets.PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: qa/package-lock.json

      - name: Run PostgreSQL container
        run: |
          docker run -d \
          --name house-seeker-test-db \
          -e POSTGRES_USER=house-seeker \
          -e POSTGRES_PASSWORD=house-seeker \
          -e POSTGRES_DB=house-seeker \
          -e TZ=GMT-3 \
          -e PGTZ=GMT-3 \
          -p 5432:5432 \
          --network host \
          postgres:16.1-alpine

      - name: Waiting PostgreSQL container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-test-db`"=="healthy" ]; do
            printf '.';
            sleep 1;
          done;

      - name: Run RabbitMQ container
        run: |
          docker run -d \
          --name house-seeker-messaging-test \
          -e RABBITMQ_DEFAULT_PASS=house-seeker \
          -e RABBITMQ_DEFAULT_USER=house-seeker \
          -p 5672:5672 \
          --network host \
          rabbitmq:3.13.0-alpine

      - name: Waiting RabbitMQ container healthcheck
        run: |
          until [ "`docker inspect -f {{.State.Health.Status}} house-seeker-messaging-test`"=="healthy" ]; do
            printf '.';
            sleep 1;
          done;

      - name: Starting data application
        working-directory: data/target
        run: |
          nohup java \
          -javaagent:jacocoagent/lib/jacocoagent.jar=append=false \
          -jar \
          -Dspring.profiles.active=test \
          data-0.0.1-SNAPSHOT.jar > output.log 2>&1 &
          echo $! > pid.txt

      - name: Waiting data application to respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8082/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Starting api application
        working-directory: api/target
        run: |
          nohup java \
          -javaagent:jacocoagent/lib/jacocoagent.jar=append=false \
          -jar \
          -Dspring.profiles.active=test \
          api-0.0.1-SNAPSHOT.jar > output.log 2>&1 &
          echo $! > pid.txt

      - name: Waiting api application to respond
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator; do
            printf '.';
            sleep 1;
          done;

      - name: Install npm dependencies
        working-directory: qa
        run: npm ci

      - name: Install playwright dependencies
        working-directory: qa
        run: npx playwright install --with-deps

      - name: Run playwright tests
        working-directory: qa
        run: API_URL=http://localhost:8080 CI=true npx playwright test

      - name: Shutting down applications
        run: |
          curl -X POST http://localhost:8082/actuator/shutdown
          tail --pid=`cat data/target/pid.txt` -f /dev/null
          curl -X POST http://localhost:8080/actuator/shutdown
          tail --pid=`cat api/target/pid.txt` -f /dev/null

      - name: Generate jacoco data report
        working-directory: data/target
        if: github.event_name != 'pull_request'
        run: |
          find classes -type f -name "QDsl*.class" -delete
          find classes -type d -wholename "**/proto" -exec rm -r {} +
          java -jar jacocoagent/lib/jacococli.jar report jacoco.exec --csv qa-coverage.csv --html qa-coverage-site --sourcefiles ../src/main/java --classfiles classes

      - name: Generate jacoco api report
        working-directory: api/target
        if: github.event_name != 'pull_request'
        run: |
          find classes -type d -wholename "**/proto" -exec rm -r {} +
          java -jar jacocoagent/lib/jacococli.jar report jacoco.exec --csv qa-coverage.csv --html qa-coverage-site --sourcefiles ../src/main/java --classfiles classes

      - name: "data: generate jacoco badge"
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: data/target/qa-coverage.csv
          coverage-badge-filename: qa-data-coverage-jacoco.svg
          branches-badge-filename: qa-data-branches-jacoco.svg
          workflow-summary-heading: QA Data - JaCoCo Test Coverage Summary

      - name: "api: generate jacoco badge"
        uses: cicirello/jacoco-badge-generator@v2
        if: github.event_name != 'pull_request'
        with:
          generate-branches-badge: true
          jacoco-csv-file: api/target/qa-coverage.csv
          coverage-badge-filename: qa-api-coverage-jacoco.svg
          branches-badge-filename: qa-api-branches-jacoco.svg
          workflow-summary-heading: QA API - JaCoCo Test Coverage Summary

      - name: git commit jacoco badges
        if: github.event_name != 'pull_request'
        run: |
          if [[ `git status --porcelain` ]]; then
            git config --global user.name 'Thiago Gomes Borba'
            git config --global user.email 'thiago.borba@users.noreply.github.com'
            git add -A
            git commit -m "Push integration tests badges"
            git push
          fi

      - name: "data: upload coverage report"
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: data-qa-coverage-report
          path: |
            data/target/jacoco.exec
            data/target/qa-coverage.csv
            data/target/qa-coverage-site

      - name: "api: upload coverage report"
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: api-qa-coverage-report
          path: |
            api/target/jacoco.exec
            api/target/qa-coverage.csv
            api/target/qa-coverage-site

      - name: "Upload playwright report"
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: qa/playwright-report/
